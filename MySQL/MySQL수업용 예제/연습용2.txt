use jscdb;
-- 다음 구문을 SQL문으로 변경하고 실행하십시오.
-- 1. 상품테이블에서 상품명이 ~인 상품의 거래시작일자 이후에 거래시작을 한 상품명, 제조회사, 거래시작일자를 조회 (서브퀴리문 사용)
select prodname,maker,sdate from jscprod where prodname = '프링글스';
-- 2. 판매테이블에서 판매번호가 ~인 제품의 수량보다 적은 것의 판매번호, 상품코드, 수량을 조회 (서브쿼리문 사용)
select snum, prodcode, amount from jscsale where amount < 
(select amount from jscsale where snum = 4);
-- 3. 판매테이블에서 상품코드가 ~인 제품의 가격보다 비싼 것의 상품코드, 가격을 모두 조회 (서브쿼리문과 any를 사용)
select prodcode,price from jscsale where price <
any (select price from jscsale where prodcode = 'kokal');
-- 4. 상품테이블에서 종류가 ~인 제품의 재고보다 작은 것의 상품명,종류,재고를 조회 (서브쿼리문과 all 사용)
select prodname, gp, stock from jscprod where stock <
all (select stock from jscprod where gp = '과자류');
-- 5. 상품테이블에서 상품명과 거래시작일자를 조회하는데 거래시작일자순(거래시작일자가 먼저인 것이 위에 나타나도록)으로 정렬.
select prodname, sdate from jscprod order by sdate asc;
-- 6. 상품테이블에서 상품명,종류,재고를 조회하는데 재고가 큰 것이 위로 올라가도록 정렬
select prodname, gp, stock from jscprod order by stock desc;
-- 7. 판매테이블에서 종류가 중복된 것을 제외하고 조회
select * from jscprod group by gp;
-- 8. 판매테이블에서 상품코드별로 수량의 합을 구하시오.
select prodcode, sum(amount) from jscsale group by prodcode;
-- 9, 위의 8번문제에서 상품코드와 총판매수량으로 별칭을 사용하여 조회.
select prodcode as '상품코드', sum(amount) as '총판매수량' from jscsale group by prodcode;
-- 10. 판매테이블에서 상품코드별로 가격의 합을 구하는데, 상품코드와 가격총합으로 별칭을 사용하여 조회.
select prodcode as '상품코드', sum(price) as '가격총합' from jscsale group by price;
-- 11. 판매테이블에서 상품코드별로 총구매액(가격*수량)을 구하되 별칭으로 상품코드와 총구매액을 사용한다.
select prodcode as '상품코드', sum(amount*price) as '총구매액' from jscsale group by prodcode;
-- 12. 상품테이블에서 재고의 평균을 평균재고갯수라는 별칭을 사용하여 구한다.
select avg(stock) as '평균재고갯수' from jscprod;
-- 13. 판매테이블에서 가격의 평균을 평균가격이라는 별칭을 사용하여 구한다.
select avg(price) as '평균가격' from jscsale;
-- 14. 위의 13번문제에서 상품코드별 평균가격을 구하는데 상품코드라는 별칭과 평균가격이라는 별칭을 사용
select prodcode as '상품코드', avg(price*amount) from jscsale group by prodcode;
-- 15. 상품테이블에서 종류별 재고의 평균을 구하는데, 종류와 평균재고라는 별칭을사용
select gp as '종류', avg(stock) from jscprod group by gp;
-- 16. 상품테이블에서 재고가 제일 많은 것과 제일 적은 것의 상품명,재고를 조회
select distinct(prodname) as '상품명', stock as '재고' from jscprod
where stock = (select min(stock) from jscprod) or stock = (select max(stock) from jscprod);
-- 17. 판매테이블에서 판매일자가 제일 최근과 제일 오래된것의 상품코드와 판매일자를 조회
select distinct(prodcode) as '상품명', pdate as '재고' from jscsale
where pdate = (select min(pdate) from jscsale) or pdate = (select max(pdate) from jscsale);
-- 18. 판매테이블에서 총구매액(가격*수량)이 ~이상인 상품코드만 조회하되, 상품코드와 총구매액을 별칭으로 사용하십시오.
select prodcode as '상품코드', sum(price*amount) as '총구매액'
from jscsale group by prodcode having sum(price*amount) >= 10000;
-- 19. 상품테이블에서 특정상품명의 재고수량을 변경하십시오. 
SET SQL_SAFE_UPDATES = 0;
update jscprod set stock = 20 where prodname = '프링글스';
-- 20. 판매테이블에서 특정 판매번호의 판매수량을 변경하십시오.
update jscsale set amount = 20 where snum = 4;
-- 내장함수 문제
-- 21. 다음수식 50>30의 참,거짓 여부를 표시
select if(50>30,'참','거짓');
-- 22. 9를 3으로 나눈 나머지값에 따라 3의배수가 출력되도록 한다.
select case 9%3 when 0 then '3의배수' end;
        
-- 23. 대문자 K와 소문자 y의 아스키값이 출력되도록 한다.
select ascii('K'), ascii('y');
-- 24. 경복대학교의 bit_length, char_length, length를 구하시오.
select bit_length('경복대학교'),char_length('경복대학교'),length('경복대학교');
-- 25. concat_ws를 사용하여 스마트*IT*소프트웨어가 출력되도록 한다.
select concat_ws('*','스마트','it','소프트웨어');
-- 26. ‘가나다라마바사아’에서 사의 위치값이 3이 나오도록 find_in_set 함수 사용
select find_in_set('사','가나,다라마바,사,아');
-- 27. ‘smart’에서 instr값이 5가 나오도록 함수 사용. 
select instr('smart','t');
-- 28. 37.54679가 37.55가 출력되도록 함수 사용. 
select format(37.54679,2);
-- 29. 37의 2진수값, 107의 8진수값, 99의 16진수값을 구하시오. 
select bin(37), oct(107),hex(99);
-- 30. kyungbok에서 kyu&&&ok으로 출력되도록 함수를 사용. 
select insert('kyungbok', 4, 3,'&&&');
-- 31. kyungbok에서 ok가 출력되도록 함수 사용. 
select right('kyungbok',2);
-- 32. kyungbok에서 kyu가 출력되도록 함수 사용. 
select left('kyungbok',3);
-- 33. smartitsw에서 it가 출력되도록 함수 사용
select mid('smartitsw',6,2);
-- 34. kbu를 대문자로, UNIV를 소문자로. 
select upper('kbu'),lower('UNIV');
-- 35. ^^^smile, drunk@@@@가 출력되도록 한다. 
select lpad('smile',8,'^'), rpad('drunk',9,'@');
-- 36. comcomcom이 출력되도록 한다.
select repeat('com',3);
-- 37. 경복대학교전자계산과를 경복대학교스마트IT소프트웨어과로 변경되도록 한다.
select replace('경복대학교전자계산과','전자계산','스마트IT소프트웨어');